# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  schedule:
    - cron: '30 10 * * 1' # every Monday at 00:00 UTC
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  attestations: write

jobs:
  gh-release:
    permissions:
      id-token: write
      contents: write
      attestations: write
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.git_tag }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # fetch all history for all branches and tags

      - name: Calculate version bump
        id: create_tag
        uses: chainguard-dev/actions/git-tag@cd899cc96227b82170571cad1c3d6378d8cba678 # v1.4.15
        with:
          bump_level: patch
          dry_run: true
          use-gitsign: false

      - name: Create immutable source code release with tag
        env:
          GH_TOKEN: ${{ github.token }}        
        run: |
          TAG=${{ steps.create_tag.outputs.git_tag }}
          PREFIX="rules_apko-${TAG#v}"
          ARCHIVE="rules_apko-$TAG.tar.gz"
          git archive --format=tar.gz --prefix=${PREFIX}/ ${{ github.sha }} > $ARCHIVE
          gh release create ${TAG} --fail-on-no-commits --target ${{ github.sha }} --generate-notes $ARCHIVE

  token:
    runs-on: ubuntu-latest
    needs: gh-release
    permissions:
      id-token: write
    outputs:
      token: "${{ steps.octo-sts.outputs.token }}"
    steps:
      - uses: octo-sts/action@e480437973a6f6ac2e9caa40ecabedc870d76395 # v1.0.1
        id: octo-sts
        with:
          scope: xnox/bazel-central-registry
          identity: release-rules-apko2

  bcr-publish:
    uses: bazel-contrib/publish-to-bcr/.github/workflows/publish.yaml@748dc7186bc60d0e24a81ee30aba8aa543794767 # v1.0.0
    needs: [gh-release, token]
    with:
      tag_name: ${{ needs.gh-release.outputs.tag_name }}
      registry_fork: xnox/bazel-central-registry
      registry: chainguard-dev/bazel-central-registry
      attest: false
      draft: true
    permissions:
      attestations: write
      contents: write
      id-token: write
    secrets:
      publish_token: ${{ needs.token.outputs.token }}
